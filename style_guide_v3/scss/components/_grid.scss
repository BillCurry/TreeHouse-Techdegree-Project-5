//Grid:
//     .container
//     .grid__row
//     .grid__col--2
//     .grid__col--3
//     .grid__col--4
//     .grid__col--5
//     .grid__col--6
//     .grid__col--7
//     .grid__col--8
//     .grid__col--9
//     .grid__col--10
//     .grid__col--11
//     .grid__col--12
//     .centered
//     .theme__colors

.container {
  @extend %center-element;
  padding: 0 1em .5em 1em;
  @extend %base-text;
  max-width: $container-max-width;
  }

.grid__row {
  @include flexy ($dir:column, $just:center);
  margin-bottom: 1em;
}


[class^="grid__col--"] {
    @extend %center-element;
    @extend %block-element;
    @extend %full-width;
    margin-top: em(12px);
    margin-bottom: em(12px);
    border-radius: $br--default;
    padding: 15px 30px;
    border: 0;
    color: palette(gray);
    font-size : em(16px);
    font-weight: $font-weight--medium;
    // margin-bottom: 25px;
  }


[class^="grid__col--"] + [class^="grid__col--"] {
  margin-top: em(-5px);
}


 //this targets elements in the grid system that share the theme color class and grid__col class and provides a background color from my source map ($col-colors) in my variables partial
.theme__colors.grid {
    &__col {
      @include bg-colors($col-colors);
    }
}




// //Make nested grid 100%
//   [class*="grid__col--"] {
//     width: 100;
//       &theme__colors {
//         @include bg-colors($col-colors);
//   }
// }

  // //Set a max-width grid container
  // @media (min-width: 1100px) {
  //   max-width: $g-cont-max-w;
  // }


// // Calculate grid columns

// @media (min-width: 769px) {
//   @for $i from 1 through $g-col-count {
//     $context: g-context($g-col-width, $g-col-count ,$g-gutter-width) !global;
//     $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

//     // Generate column modifier classes
//     .grid__col--#{$i} {
//       width: percentage($target / $context);
//     }
//   }
// }

// // Column styles





//   @media (min-width: 769px) {
//     @include doubly(percentage($g-gutter-width / $context));
//     float: left;
//     min-height: 1px;
//     padding-left: 10px;
//     padding-right: 10px;
//     &:last-of-type {
//       float: right;
//     }
//   }
// }